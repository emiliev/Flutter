# This is a basic workflow to help you get started with Actions

name: Flutter CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'

      # Setup the flutter environment.
      - name: Setup Flutter environment
      - uses: subosito/flutter-action@v1
      
      # Get flutter dependencies
      - name: flutter pub get
      - run: flutter pub get
      
      # Check for any formatting issues in the code
      - name: Check for any formatting issues in the code
      - run: flutter format --set-exit-if-changed .

      # Statically analyze for Date code for any errors
      - name: Statically analyze for Date code for any errors
      - run: flutter analyze .

      # Build apk.
      - name: Buld apk
      - run: flutter build apk

      - name: Upload artifact to Firebase App Distribution
      - uses: wzieba/Firebase-Distribution-Github-Action@v1.3.2
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
#      token: ${{secrets.FIREBASE_TOKEN}}
          groups: testers
          file: app/build/outputs/apk/release/app-release-unsigned.apk
